(1
 (ace-jump-mode . [(2 0) nil "a quick cursor location minor mode for emacs" single])
 (ace-window . [(0 9 0) ((avy (0 2 0))) "Quickly switch windows." single])
 (anaconda-mode . [(20150825 346) ((emacs (24)) (json-rpc (0 0 1)) (cl-lib (0 5 0)) (dash (2 6 0)) (f (0 16 2))) "Code navigation, documentation lookup and completion for Python" tar])
 (async . [(1 4) nil "Asynchronous processing in Emacs" tar])
 (auto-compile . [(20150731 545) ((emacs (24 3)) (dash (2 1)) (packed (0 3 5))) "automatically compile Emacs Lisp libraries" single])
 (avy . [(0 3 0) ((emacs (24 1)) (cl-lib (0 5))) "set-based completion" single])
 (bbdb . [(20150523 1239) nil "The Insidious Big Brother Database for GNU Emacs" tar])
 (bookmark+ . [(20150816 2012) nil "Bookmark+: extensions to standard library `bookmark.el'." tar])
 (buffer-move . [(20150523 513) nil "" single])
 (cmake-mode . [(3 3 1) nil "major-mode for editing CMake sources" single])
 (coffee-mode . [(0 6 0) ((emacs (24 1)) (cl-lib (0 5))) "Major mode to edit CoffeeScript files in Emacs" single])
 (color-theme . [(20080305 34) nil "install color themes" tar])
 (company . [(0 8 12) ((emacs (24 1)) (cl-lib (0 5))) "Modular text completion framework" tar])
 (company-anaconda . [(20150525 215) ((company (0 8 0)) (anaconda-mode (0 1 0)) (cl-lib (0 5 0))) "Anaconda backend for company-mode" single])
 (company-c-headers . [(20150801 901) ((emacs (24 1)) (company (0 8))) "Company mode backend for C/C++ header files" single])
 (connection . [(1 10) nil "No description available." single])
 (cpputils-cmake . [(0 5 2) nil "Easy real time C++ syntax check and intellisense if you use CMake" tar])
 (crontab-mode . [(20090510 1355) nil "Mode for editing crontab files" single])
 (csharp-mode . [(20150815 552) nil "C# mode derived mode" single])
 (dash . [(2 11 0) nil "A modern list library for Emacs" single])
 (define-word . [(20150709 1223) ((emacs (24 1))) "display the definition of word at point." single])
 (dictionary . [(1 10) nil "No description available." single])
 (diminish . [(0 44) nil "Diminished modes are minor modes with no modeline display" single])
 (dired+ . [(20150730 706) nil "Extensions to Dired." single])
 (dired-details . [(20130824 1158) nil "make file details hide-able in dired" single])
 (dropdown-list . [(20120329 1636) nil "Drop-down menu interface" single])
 (dsvn . [(20130120 1257) nil "Subversion interface" single])
 (emmet-mode . [(1 0 8) nil "Unofficial Emmet's support for emacs" single])
 (erlang . [(20150622 644) nil "Erlang major mode" tar])
 (exec-path-from-shell . [(1 9) nil "Get environment variables such as $PATH from the shell" single])
 (expand-region . [(20150804 2210) nil "Increase selected region by semantic units." tar])
 (f . [(0 17 2) ((s (1 7 0)) (dash (2 2 0))) "Modern API for working with files and directories" single])
 (fakir . [(20140729 952) ((noflet (0 0 8)) (dash (1 3 2)) (kv (0 0 19))) "fakeing bits of Emacs" single])
 (findr . [(20130824 1207) nil "Breadth-first file-finding facility for (X)Emacs" single])
 (flx . [(0 5) ((cl-lib (0 3))) "fuzzy matching with good sorting" single])
 (flx-ido . [(0 5) ((flx (0 1)) (cl-lib (0 3))) "flx integration for ido" single])
 (flymake-coffee . [(0 12) ((flymake-easy (0 1))) "A flymake handler for coffee script" single])
 (flymake-css . [(0 3) ((flymake-easy (0 1))) "Flymake support for css using csslint" single])
 (flymake-easy . [(0 10) nil "Helpers for easily building flymake checkers" single])
 (flymake-jslint . [(0 23) nil "Flymake support for javascript using jslint" single])
 (flymake-lua . [(20140310 230) nil "Flymake for Lua" single])
 (flymake-python-pyflakes . [(0 9) ((flymake-easy (0 8))) "A flymake handler for python-mode files using pyflakes (or flake8)" single])
 (flymake-ruby . [(0 8) ((flymake-easy (0 1))) "A flymake handler for ruby-mode files" single])
 (flymake-sass . [(0 6) ((flymake-easy (0 1))) "Flymake handler for sass files" single])
 (flyspell-lazy . [(0 6 10) nil "Improve flyspell responsiveness using idle timers" single])
 (fringe-helper . [(1 0 1) nil "helper functions for fringe bitmaps" single])
 (ggtags . [(0 8 10) ((emacs (24)) (cl-lib (0 5))) "emacs frontend to GNU Global source code tagging system" single])
 (git-commit . [(2 2 1) ((emacs (24 4)) (dash (2 11 0)) (with-editor (2 2 1))) "Edit Git commit messages" single])
 (git-gutter . [(0 83) ((cl-lib (0 5)) (emacs (24))) "Port of Sublime Text plugin GitGutter" single])
 (git-link . [(0 2 1) nil "Get the GitHub/Bitbucket/Gitorious URL for a buffer location" single])
 (git-rebase-mode . [(1 0 0) nil "Major mode for editing git rebase files" tar])
 (git-timemachine . [(2 7) nil "Walk through git revisions of a file" single])
 (gitconfig-mode . [(20150405 1627) nil "Major mode for editing .gitconfig files" single])
 (gitignore-mode . [(1 2 0) nil "Major mode for editing .gitignore files" single])
 (groovy-mode . [(20150725 1050) nil "Major mode for Groovy source files" tar])
 (guide-key . [(1 2 5) ((popwin (0 3 0))) "Guide the following key bindings automatically and dynamically" single])
 (haml-mode . [(3 1 9) ((ruby-mode (1 0))) "Major mode for editing Haml files" single])
 (haskell-mode . [(13 14 2) ((cl-lib (0 5))) "A Haskell editing mode" tar])
 (hl-sexp . [(1 0 0) nil "highlight the current sexp" single])
 (htmlize . [(20130207 1202) nil "Convert buffer text and decorations to HTML." single])
 (ibuffer-vc . [(0 10) ((cl-lib (0 2))) "Group ibuffer's list by VC project, or show VC status" single])
 (idomenu . [(20141123 1320) nil "imenu tag selection a la ido" single])
 (inf-ruby . [(20150813 1848) nil "Run a Ruby process in a buffer" single])
 (inflections . [(20121016 157) nil "convert english words between singular and plural" single])
 (js2-mode . [(20150713) ((emacs (24 1)) (cl-lib (0 5))) "Improved JavaScript editing mode" tar])
 (json-mode . [(1 1 0) nil "Major mode for editing JSON files" single])
 (json-rpc . [(20140602 806) ((emacs (24 1)) (cl-lib (0 5))) "JSON-RPC library" single])
 (jump . [(2 3) ((findr (0 7)) (inflections (1 1))) "build functions which contextually jump between files" single])
 (kv . [(20140108 734) nil "key/value data structure functions" single])
 (legalese . [(20100119 2148) nil "Add legalese to your program files" single])
 (less-css-mode . [(0 20) nil "Major mode for editing LESS CSS files (lesscss.org)" single])
 (link . [(1 10) nil "No description available." single])
 (lua-mode . [(20150804 2302) nil "a major-mode for editing Lua scripts" single])
 (magit . [(2 2 1) ((emacs (24 4)) (async (1 4)) (dash (2 11 0)) (with-editor (2 2 1)) (git-commit (2 2 1)) (magit-popup (2 2 1))) "A Git porcelain inside Emacs" tar])
 (magit-popup . [(2 2 1) ((emacs (24 4)) (async (1 4)) (dash (2 11 0))) "Define prefix-infix-suffix command combos" tar])
 (markdown-mode . [(2 0) nil "Emacs Major mode for Markdown-formatted text files" single])
 (move-text . [(20140307 1644) nil "Move current line or region with M-up or M-down." single])
 (multi-term . [(20150220 1320) nil "Managing multiple terminal buffers in Emacs." single])
 (multiple-cursors . [(1 3 0) nil "Multiple cursors for Emacs." tar])
 (mwe-log-commands . [(20100703 541) nil "log keyboard commands to buffer" single])
 (neotree . [(0 2 1) nil "A tree plugin like NerdTree for Vim" single])
 (noflet . [(20141102 654) nil "locally override functions" single])
 (packed . [(20150723 438) ((emacs (24 3)) (dash (2 10 0))) "package manager agnostic Emacs Lisp package utilities" single])
 (page-break-lines . [(0 10) nil "Display ugly ^L page breaks as tidy horizontal lines" single])
 (paredit . [(24) nil "minor mode for editing parentheses" single])
 (pointback . [(20100210 752) nil "Restore window points when returning to buffers" single])
 (pomodoro . [(20150716 1046) nil "A timer for the Pomodoro Technique" single])
 (popwin . [(1 0 0) nil "Popup Window Manager." single])
 (quack . [(20130126 1623) nil "No description available." single])
 (rainbow-delimiters . [(2 1 1) nil "Highlight brackets according to their depth" single])
 (regex-tool . [(20131104 1434) nil "A regular expression evaluation tool for programmers" single])
 (rinari . [(2 11) ((ruby-mode (1 0)) (inf-ruby (2 2 5)) (ruby-compilation (0 16)) (jump (2 0))) "Rinari Is Not A Rails IDE" single])
 (robe . [(20150726 1423) ((inf-ruby (2 3 0))) "Code navigation, documentation lookup and completion for Ruby" tar])
 (ruby-compilation . [(2 11) ((inf-ruby (2 2 1))) "run a ruby process in a compilation buffer" single])
 (rvm . [(1 4 0) nil "Emacs integration for rvm" single])
 (s . [(1 9 0) nil "The long lost Emacs string manipulation library." single])
 (sass-mode . [(20150508 2012) ((haml-mode (3 0 15)) (cl-lib (0 5))) "Major mode for editing Sass files" single])
 (scratch . [(20120830 1028) nil "Mode-specific scratch buffers" tar])
 (scss-mode . [(0 5 0) nil "Major mode for editing SCSS files" single])
 (session . [(20120510 1700) nil "use variables, registers and buffer places across sessions" single])
 (simple-httpd . [(20150430 1755) ((cl-lib (0 3))) "pure elisp HTTP server" single])
 (string-edit . [(0 1 0) ((dash (1 2 0))) "Avoid escape nightmares by editing string in separate buffer" single])
 (tagedit . [(1 4 0) ((s (1 3 1)) (dash (1 0 3))) "Some paredit-like features for html-mode" single])
 (textile-mode . [(20120721 1258) nil "Textile markup editing major mode" single])
 (unfill . [(0 1) nil "The inverse of fill-paragraph and fill-region" single])
 (visual-fill-column . [(1 4) ((emacs (24 3))) "fill-column for visual-line-mode" single])
 (w3m . [(20150608 1838) nil "an Emacs interface to w3m" tar])
 (wgrep . [(20141016 1656) nil "Writable grep buffer and apply the changes to files" single])
 (with-editor . [(2 2 1) ((emacs (24 4)) (async (1 4)) (dash (2 11 0))) "Use the Emacsclient as $EDITOR" tar])
 (writeroom-mode . [(2 9) ((emacs (24 1)) (visual-fill-column (1 4))) "Minor mode for distraction-free writing" tar])
 (yagist . [(0 8 12) ((cl-lib (0 3))) "Yet Another Emacs integration for gist.github.com" single])
 (yaml-mode . [(20150816 2235) nil "Major mode for editing YAML files" single])
 (yasnippet . [(0 9 0 1) nil "Yet another snippet extension for Emacs." tar])
)